library ieee;

use ieee.std_logic_1164.all;

entity arbitrary is

	port (
		
		instrution_cache_req: in std_logic;
		data_cache_req: in std_logic;
		
		instrution_cache_ack: out std_logic;
		data_cache_ack: out std_logic
	
	);

end arbitrary;

architecture arbitrary_behave of arbitrary is
begin
	
	process(instrution_cache_req, data_cache_req) is
	begin
		
		if (data_cache_req = '1') then
			
			data_cache_ack <= '1';
			instrution_cache_ack <='0';
			
		elsif (instrution_cache_req = '1') then
			
				data_cache_ack <= '0';
				instrution_cache_ack <= '1';
			
			else
				
				data_cache_ack <= '0';
				instrution_cache_ack <= '0';
		
		end if;
		
	end process;
end arbitrary_behave;